{"version":3,"sources":["js/main.js","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["p1","document","getElementById","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","i","length","module"],"mappings":"ACAA,ACAA,IDAIG,ACAAY,MAAM,GDAG,ACAAC,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;;ADCA,ACCA,AFFA,SCCSZ,ACCAa,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;AAC5B,ACCA,MDDI,ACCAC,CDDChB,MCCM,GDDX,ACCce,EDDE,ECCE,CAACE,SAAL,EAAd;ADAEjB,ADFJ,ICEIA,EDFEH,EAAE,GAAGC,ECEE,GAAGI,GDFG,CAACH,QCEQ,EAAxB,IDFO,CAAwB,QAAxB,CAAX,EAGA;ACAG,ACADiB,AFCF,EEDEA,OAAO,CAACE,MAAR,GAAiB,YAAY;AAC3BH,AFCJ,IEDIA,IAAI,CAACI,MAAL;ADCF,ACAC,AFCH,GEHE,MDEOnB,SAAP;AACD,ADCD;AEDEgB,AFEF,EEFEA,OAAO,CAACI,IAAR,GAAeL,IAAI,CAACK,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCC,IAAI,CAACC,GAAL,EAA/C;ADEF,ACDER,AFEF,EEFEA,IAAI,CAACS,EDCEtB,QCDP,CAAgBuB,GDClB,GAAwB,MCDtB,CAA6BT,OAA7B,EAAsCD,IAAI,CAACW,WAA3C;ADEA,ACDD,AFED;ACAE,ADIF,MCJM;AACF,ACDJ,AFMA,IENIC,MDCM,IAAIxB,ACDA,GAAG,EDCP,EAAN,ACDJ;ADEG,ADKH,GCPE,CAEE,OAAOC,GAAP,EAAY;AACZ,ACFJ,AFOA,QCLQC,CCFCuB,MDEM,GAAG,ACFlB,CDEmB,ECFE,GDEGxB,GAAG,CAACE,KAAV,EAAiBC,KAAjB,CAAuB,+DAAvB,CAAd;ACDF,AFOF,MEPMoB,UAAJ,EAAgB;ADEd,ACDA,AFOJ,QCNQtB,OAAJ,EAAa;AACX,ACDH,AFOH,aCNaG,UAAU,CAACH,OAAO,CAAC,CAAD,CAAR,CAAjB;AACD,ADML;ACLG,ACDDsB,AFOF,EEPEA,UAAU,GAAGE,UAAU,CAAC,YAAY;AAClC,AFOJ,QEPQC,KAAK,GAAGhC,QAAQ,CAACiC,gBAAT,CAA0B,wBAA1B,CAAZ;ADEF,ADcF,SCdS,GAAP;AACD,ACFG,AFiBJ,SEjBS,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,AFiBN,UEjBUpB,MAAM,CAACJ,UAAP,CAAkBsB,KAAK,CAACE,CAAD,CAAL,CAASZ,IAA3B,MAAqCR,MAAM,CAACV,YAAP,EAAzC,EAAgE;ADGtE,ACFQY,AFiBR,QEjBQA,CDECN,SCFS,CDElB,ACFmBsB,CDECrB,GAApB,CCFwB,CDEC,ACFAuB,CAAD,CAAN,CAAV;ADGN,ACFK,AFiBP,SCfS,CAAC,KAAKvB,GAAN,EAAWC,OAAX,CAAmB,gFAAnB,EAAqG,IAArG,IAA6G,GAApH;AACD,ACFI,AFiBL;AACA;ACdAC,ACFIgB,AFiBJ,IEjBIA,GDEG,CAACzB,MCFM,GAAG,GDEjB,CCFI,EDEmBD,kBAAvB;AACAU,ACFG,AFiBH,GE1ByB,EASpB,EDEE,ACXkB,CDWjBH,ACXN,UDWF,GAAqBA,UAArB;ACDC,AFiBD;AACA;AEhBA0B,AFiBA,MEjBM,CAACvB,OAAP,GAAiBiB,SAAjB;AFkfile":"main.fb6bbcaf.js","sourceRoot":"..\\src","sourcesContent":["import '../scss/style.scss'\r\nconst p1 = document.getElementById('place1');\r\n\r\n\r\n//Demo\r\n// console.log(1);\r\n// console.log(2);\r\n// setTimeout(()=>{\r\n//     console.log('callback function fired...')\r\n// },300);\r\n// console.log(3);\r\n// console.log(4);\r\n\r\n\r\n\r\n//HTTP request\r\n\r\n// const request = new XMLHttpRequest();\r\n// request.addEventListener('readystatechange',()=>{\r\n//     console.log(request,request.readyState);\r\n//     if(request.readyState===4 && request.status === 200){\r\n//         console.log(JSON.parse(request.responseText));\r\n//     }\r\n// });\r\n// request.open('GET','https://jsonplaceholder.typicode.com/todos');\r\n// request.send();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//CallBack function\r\n\r\n// const getURL = (url, callback) => {\r\n//     let res;\r\n//     const request = new XMLHttpRequest();\r\n//     request.addEventListener('readystatechange', () => {\r\n//         // console.log(request,request.readyState);\r\n//         if (request.readyState === 4) {\r\n//             if (request.status === 200) {\r\n//                 res = JSON.parse(request.responseText);\r\n//                 callback(undefined, res);\r\n//                 console.log(res);\r\n//             }\r\n//             else {\r\n//                 res = 'something wrong ' + request.status;\r\n//                 callback(res, undefined);\r\n//             }\r\n//         } else {\r\n//             res = 'bad request ' + request.status;\r\n//             callback(res, undefined);\r\n//         }\r\n//     });\r\n\r\n//     try {\r\n//         request.open('GET', url);\r\n//         request.send();\r\n//     }\r\n//     catch (e) { console.log(e); }\r\n// }\r\n\r\n\r\n// const getURLCallback = (err, data) => {\r\n//     if (err) {\r\n//         return err;\r\n//     } else {\r\n//         return data;\r\n//     }\r\n// }\r\n\r\n\r\n// getURL('https://jsonplaceholder.typicode.com/todos',getURLCallback);\r\n\r\n// getURL('data.json',getURLCallback);\r\n// getURL('data2.json',getURLCallback);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Promises\r\n\r\n// let promise1 = new Promise(\r\n//     (resolve, reject) => {\r\n//         let a = 1 + 1;\r\n//         if (a == 2) {\r\n//             resolve(a)\r\n//         }\r\n//         else {\r\n//             reject('fail')\r\n//         }\r\n//     }\r\n// )\r\n\r\n\r\n// promise1.then((result) => {\r\n//     p1.innerHTML = result * 10;\r\n//     console.log('promise completed');\r\n// }).catch((r) => {\r\n//     p1.innerHTML = r;\r\n// });\r\n\r\n// console.log('after promise code completed');\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const pr1 = new Promise(\r\n//     (s, e) => {\r\n//         if (false) { e('pr1 not resolved') }\r\n//         s('pr1 resolved ')\r\n\r\n//     }\r\n// )\r\n// const pr2 = new Promise(\r\n//     (s, e) => {\r\n//         s('pr2 resolved ')\r\n//     }\r\n// )\r\n// const pr3 = new Promise(\r\n//     (s, e) => {\r\n//         s('pr3 resolved')\r\n//     }\r\n// )\r\n\r\n// Promise.all([pr1, pr2, pr3]).then((results) => {\r\n//     console.log(results);\r\n// }).catch((e) => { console.log('error: ',e) })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // Async await \r\n\r\n// async function doPromises() {\r\n//     let s1 = \"\";\r\n//     try {\r\n//         const promise1 = await pr1;\r\n//         const promise2 = await pr2;\r\n//         const promise3 = await pr3;\r\n//         return await promise1 + promise2 + promise3;\r\n\r\n//     } catch (e) {\r\n//         console.log(e);\r\n//     }\r\n\r\n// }\r\n\r\n// let res = doPromises();\r\n\r\n// (async () => {\r\n//     // p1.innerText = await res;\r\n//     console.log(await res);\r\n// })();\r\n\r\n\r\n// Promise instead callback\r\n// const getURL = (url) => {\r\n//     let res;\r\n//     return new Promise((resolve, reject) => {\r\n//         const request = new XMLHttpRequest();\r\n//         request.addEventListener('readystatechange', () => {\r\n//             // console.log(request,request.readyState);\r\n//             if (request.readyState === 4) {\r\n//                 if (request.status === 200) {\r\n//                     res = JSON.parse(request.responseText);\r\n//                     resolve(res);\r\n//                     // console.log(res);\r\n//                 }\r\n//                 else {\r\n//                     res = 'something wrong ' + request.status;\r\n//                     reject(res);\r\n//                 }\r\n//             }\r\n//         });\r\n//         try {\r\n//             request.open('GET', url);\r\n//             request.send();\r\n//         }\r\n//         catch (e) { console.log(e); }\r\n//     })\r\n// }\r\n\r\n// getURL('https://jsonplaceholder.typicode.com/todos')\r\n//     .then(r => {\r\n//         console.log(r);\r\n//         return getURL('data.json');\r\n//     })\r\n//     .then(r => {\r\n//         console.log(r);\r\n//         return getURL('data2.json')\r\n//     })\r\n//     .then(r=> console.log(r))\r\n//     .then(r=>console.log(\"finished\"))\r\n//     .catch(e => console.log(e));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Fetch API\r\n\r\n// fetch('data.json')\r\n// .then(r=> {return r.json()})\r\n// .then(r=>console.log(r));\r\n\r\n\r\n\r\n\r\n\r\n// Async await\r\n\r\n// const getList = async ()=>{}\r\n// console.log(getList())\r\n\r\n\r\n// const getList = async () => {\r\n//     let res = await fetch('data.json');\r\n//     res = await res.json();\r\n//     return res;\r\n// }\r\n\r\n\r\n// let outputList;\r\n\r\n// console.log(outputList);\r\n\r\n// getList().then(r=>outputList=r).then(r=>console.log(outputList));\r\n\r\n// (async ()=>{console.log(await getList())})();\r\n\r\n// console.log(outputList);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}